{"version":3,"sources":["components/Button-sorter.js","components/Button-filter-mobile.js","components/Breadcrumbs.js","components/Item-list-filter-keywords.js","components/Items-list-filter-size.js","components/Item-list-filter-priceBar.js"],"names":["ButtonSorter","props","state","dropdownShowNumberItemsOpen","dropdownSortOpen","this","dispatchToSortList","sortArgsForFilter","dropDownWithArrow","x","indexOf","src","alt","isOpen","toggle","setState","caret","color","map","onClick","key","Component","ButtonFilterMobile","modal","dispatchSize","gender","sortSizeForFilter","keywordsSelectAction","categoriesProducts","keywordsForFilter","actionPriceRangeFilter","reducerPriceRangeFilter","listLength","style","marginRight","className","Breadcrumbs","selectedCategory","backgroundColor","textColor","marginTop","showSortBtn","showFilterBtn","styles","containerPcScreen","height","display","justifyContent","alignItems","containerMobileScreen","sortBtnMobileScreen","linkColor","sortBtn","sm","size","offset","buttonLabel","genderLink","Link","to","charAt","toUpperCase","substr","selectedItem","length","isMobile","ItemsListFilterKeywords","componentDidMount","actionFillFilters","men","women","console","log","cat","categoriesProductslength","listStyleType","type","checked","category","includes","onChange","availableSizes","ItemsListFilterSize","outline","ProductListFilterPriceBar","max","step","value"],"mappings":"6KAuDeA,E,kDAvCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,6BAA6B,EAC7BC,kBAAkB,GAJH,E,0CAQnB,WAAU,IAAD,SAC2CC,KAAKJ,MAA/CK,EADD,EACCA,mBAAoBC,EADrB,EACqBA,kBACpBH,EAAqBC,KAAKH,MAA1BE,iBAEFI,EAAoB,SAACC,GAAD,OAC1BA,EAAEC,QAAQ,OAAS,EACnB,kBAAC,WAAD,KAAU,yBAAKC,IAAK,kBAAkBC,IAAI,KAAM,IAAIH,GACpD,kBAAC,WAAD,KAAU,yBAAKE,IAAK,gBAAgBC,IAAI,KAAM,IAAIH,IASlD,OACE,kBAAC,IAAD,CAAiBI,OAAQT,EAAkBU,OAAQ,kBAAI,EAAKC,SAAS,CAACX,kBAAmBA,MACvF,kBAAC,IAAD,CAAgBY,OAAK,EAACC,MAAM,SAA5B,SACST,EAAkBD,IAE3B,kBAAC,IAAD,KACgB,CAAC,WAAY,YAAa,WAAY,aAZNW,KAAI,SAAAT,GAAC,OACvD,kBAAC,IAAD,CAAcU,QAAS,kBAAIb,EAAmBG,IAAIW,IAAKX,GACpDD,EAAkBC,a,GAtBAY,a,wBCmEZC,E,kDA5Db,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IAMRa,OAAS,WACP,EAAKC,SAAS,CACZQ,OAAQ,EAAKrB,MAAMqB,SAPrB,EAAKrB,MAAQ,CACXqB,OAAO,GAHQ,E,0CAanB,WAAU,IAAD,EAYHlB,KAAKJ,MATPuB,EAHK,EAGLA,aACAC,EAJK,EAILA,OACAC,EALK,EAKLA,kBACAC,EANK,EAMLA,qBACAC,EAPK,EAOLA,mBACAC,EARK,EAQLA,kBACAC,EATK,EASLA,uBACAC,EAVK,EAULA,wBACAC,EAXK,EAWLA,WAIF,OACE,6BACE,kBAAC,IAAD,CAAQf,MAAM,SAASgB,MAAO,CAACC,YAAY,QAASf,QAASd,KAAKS,QAAlE,mBACA,kBAAC,IAAD,CAAOD,OAAQR,KAAKH,MAAMqB,MAAOT,OAAQT,KAAKS,OAAQqB,UAAW9B,KAAKJ,MAAMkC,WAC1E,kBAAC,IAAD,CAAarB,OAAQT,KAAKS,QAA1B,YAA2C,2BAAIkB,IAC/C,kBAAC,IAAD,KACE,0CACE,kBAAC,IAAD,CACEP,OAAQA,EACRI,kBAAmBA,EACnBF,qBAAsBA,EACtBC,mBAAoBA,IAExB,oCACE,kBAAC,IAAD,CACEJ,aAAcA,EACdE,kBAAmBA,IAEvB,iDAAgBK,EAAhB,MACE,kBAAC,IAAD,CACED,uBAAwBA,EACxBC,wBAAyBA,W,GAnDRV,aCwGlBe,IA9FK,SAAC,GAkBd,IAjBLX,EAiBI,EAjBJA,OACAY,EAgBI,EAhBJA,iBACAC,EAeI,EAfJA,gBACAC,EAcI,EAdJA,UACAC,EAaI,EAbJA,UACAC,EAYI,EAZJA,YACAC,EAWI,EAXJA,cACApC,EAUI,EAVJA,mBACAC,EASI,EATJA,kBACAiB,EAQI,EARJA,aACAE,EAOI,EAPJA,kBACAC,EAMI,EANJA,qBACAC,EAKI,EALJA,mBACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,uBACAC,EAEI,EAFJA,wBACAC,EACI,EADJA,WAGMW,EAAQ,CACZC,kBAAmB,CACjBC,OAAQ,OACRP,gBAAiBA,EACjBE,UAAWA,EACXvB,MAAOsB,EACPO,QAAS,OACTC,eAAgB,OAChBC,WAAY,UAEdC,sBAAuB,CACrBJ,OAAQ,QACRP,gBAAiBA,EACjBE,UAAWA,EACXvB,MAAOsB,EACPO,QAAS,OACTC,eAAgB,OAChBC,WAAY,UAEdE,oBAAqB,CACnBJ,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdG,UAAW,CACTlC,MAAOsB,IAILa,EACJX,GACE,kBAAC,IAAD,CAAKY,GAAI,CAAEC,KAAM,OAAQC,OAAQ,GAAKtB,MAAOU,EAAOO,qBACjDR,GACC,kBAAC,EAAD,CACEc,YAAY,kBACZ/B,OAAQA,EACRD,aAAcA,EACdE,kBAAmBA,EACnBC,qBAAsBA,EACtBE,kBAAmBA,EACnBD,mBAAoBA,EACpBE,uBAAwBA,EACxBC,wBAAyBA,EACzBC,WAAYA,IAGhB,kBAAC,EAAD,CACE1B,mBAAoBA,EACpBC,kBAAmBA,KAIrBkD,EAAahC,GAAU,kBAAC,WAAD,KAAU,kBAACiC,EAAA,EAAD,CAAMzB,MAAOU,EAAOQ,UAAWQ,GAAE,oBAAelC,IAAhD,WAA+DA,GAAUA,EAAOmC,OAAO,GAAGC,cAAgBpC,EAAOqC,OAAO,GAAxH,gBAAV,MACvBC,EAA2C,IAA5B1B,EAAiB2B,OAAe,IAAI3B,EAAmBA,EAAiB2B,OAAS,EAAI,sBAAwB,sBAClI,OACE,yBAAK/B,MAAOgC,WAAWtB,EAAOM,sBAAwBN,EAAOC,mBAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKS,GAAI,CAAEC,KAAM,SACf,6BACE,kBAACI,EAAA,EAAD,CAAMzB,MAAOU,EAAOQ,UAAWQ,GAAG,KAAlC,SADF,KAEGF,EACD,8BAAOM,KAGPX,O,gICvGRc,G,yDAEJ,WAAYjE,GAAO,IAAD,8BAChB,cAAMA,IAMRkE,kBAAoB,WAAO,IAAD,EACqD,EAAKlE,MAA1E4B,EADgB,EAChBA,kBAAmBuC,EADH,EACGA,kBAAmBxC,EADtB,EACsBA,mBAAoBH,EAD1C,EAC0CA,OACrC,IAA7BI,EAAkBmC,OACWI,EAAhB,QAAX3C,EAA6CG,EAAmByC,IAAqCzC,EAAmB0C,OACtHC,QAAQC,IAAI,eAThB,EAAKtE,MAAQ,CACXuE,IAA6C,IAAxC,EAAKxE,MAAMyE,0BAHF,E,0CAclB,WAAS,IAAD,EAOFrE,KAAKJ,MAJP2B,EAHI,EAGJA,mBACAD,EAJI,EAIJA,qBACAE,EALI,EAKJA,kBACAJ,EANI,EAMJA,OAOF,OAJ8B,QAAXA,EAAmBG,EAAmByC,IAAMzC,EAAmB0C,OAK1EpD,KAAI,SAAAT,GAAC,OACT,wBAAIwB,MAAO,CAAC0C,cAAe,QAASvD,IAAKX,GACzC,yBAAK0B,UAAU,6BAEb,2BAAOyC,KAAK,WAAWzD,QAAS,kBAAIQ,EAAqBlB,IAAIoE,SAPrCC,EAOoErE,EAPxDoB,EAAkBkD,SAASD,IAOiCE,SAAU,eAC1G,yBAAK7C,UAAU,qBACX,+BAAQ1B,MATY,IAAAqE,S,GA3BIzD,cAgDvB6C,O,gCC1Df,2BAQMe,EAAiB,CAAC,MAAO,KAAM,IAAK,IAAK,IAAK,MAMrCC,IAJa,SAAC,GAAD,IAAE1D,EAAF,EAAEA,aAAcE,EAAhB,EAAgBA,kBAAhB,OAAuCuD,EAAe/D,KAAI,SAAAT,GAAC,OAAE,kBAAC,IAAD,CAAQ0E,QAASzD,IAAsBjB,EAAGQ,MAAM,YAAYE,QAAS,kBAAKK,EAAaf,IAAIW,IAAKX,GAAIA,Q,gCCV7L,sCASMkC,GATN,OASe,CACbG,QAAS,OACTC,eAAgB,iBA2BHqC,IAxBmB,SAAC,GAAD,IAChCtD,EADgC,EAChCA,uBACAC,EAFgC,EAEhCA,wBAFgC,OAI9B,6BACE,kBAAC,IAAD,CACEsD,IAAK,IACLC,KAAM,EACNC,MAAOxD,EACPiD,SAAUlD,IAEZ,yBAAKG,MAAOU,GACV,qCAGA","file":"static/js/1.d1dbff7f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react'\nimport { \n  ButtonDropdown, \n  DropdownToggle, \n  DropdownMenu, \n  DropdownItem\n} from 'reactstrap';\n\nconst propTypes = {\n  dispatchToSortList: PropTypes.func.isRequired,\n  sortArgsForFilter: PropTypes.string.isRequired,\n};\n\nclass ButtonSorter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownShowNumberItemsOpen: false,\n      dropdownSortOpen: false\n    };\n  }\n\n  render() {\n    const { dispatchToSortList, sortArgsForFilter } = this.props\n    const { dropdownSortOpen } = this.state\n\n    const dropDownWithArrow = (x) => \n    x.indexOf(\"Asc\") > 0 ? \n    <Fragment><img src= \"/down-arrow.png\" alt=\"\" />{' '+x}</Fragment> :\n    <Fragment><img src= \"/up-arrow.png\" alt=\"\" />{' '+x}</Fragment>\n  \n\n    const eachDropDown = (optionsArray) => optionsArray.map(x=>( \n      <DropdownItem onClick={()=>dispatchToSortList(x)} key={x}>\n        {dropDownWithArrow(x)}\n      </DropdownItem>\n    ))\n\n    return (\n      <ButtonDropdown  isOpen={dropdownSortOpen} toggle={()=>this.setState({dropdownSortOpen: !dropdownSortOpen})}>\n        <DropdownToggle caret color=\"light\" >\n          Sort: {dropDownWithArrow(sortArgsForFilter)}\n        </DropdownToggle>\n        <DropdownMenu>\n          {eachDropDown(['titleAsc', 'titleDesc', 'priceAsc', 'priceDesc'])}\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  };\n};\n\nButtonSorter.propTypes = propTypes;\n\nexport default ButtonSorter;","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport ItemsListFilterKeywords from './Item-list-filter-keywords'\nimport ItemsListFilterSize from './Items-list-filter-size'\nimport ItemListFilterPriceBar from './Item-list-filter-priceBar'\n\nconst propTypes = {\n  dispatchSize: PropTypes.func.isRequired,\n  gender: PropTypes.string.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired,\n  keywordsSelectAction: PropTypes.func.isRequired,\n  categoriesProducts: PropTypes.object.isRequired,\n  keywordsForFilter: PropTypes.array.isRequired,\n  actionPriceRangeFilter: PropTypes.func.isRequired,\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n  listLength: PropTypes.number.isRequired\n};\n\nclass ButtonFilterMobile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n\n    const { \n      dispatchSize,\n      gender,\n      sortSizeForFilter, \n      keywordsSelectAction, \n      categoriesProducts,\n      keywordsForFilter,\n      actionPriceRangeFilter,\n      reducerPriceRangeFilter,\n      listLength\n    } = this.props;\n\n\n    return (\n      <div>\n        <Button color=\"danger\" style={{marginRight:'20px'}} onClick={this.toggle}>Filter the list</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Results: <b>{listLength}</b></ModalHeader>\n          <ModalBody>\n            <h4>Categories</h4>\n              <ItemsListFilterKeywords \n                gender={gender} \n                keywordsForFilter={keywordsForFilter}\n                keywordsSelectAction={keywordsSelectAction}\n                categoriesProducts={categoriesProducts}\n              />\n            <h4>Size</h4>\n              <ItemsListFilterSize \n                dispatchSize={dispatchSize} \n                sortSizeForFilter={sortSizeForFilter}\n              />\n            <h4>Price {`< ${reducerPriceRangeFilter}$`}</h4>    \n              <ItemListFilterPriceBar \n                actionPriceRangeFilter={actionPriceRangeFilter}\n                reducerPriceRangeFilter={reducerPriceRangeFilter}\n              />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nButtonFilterMobile.propTypes = propTypes;\n\nexport default ButtonFilterMobile;","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { isMobile } from \"react-device-detect\"; \nimport { Link } from 'react-router-dom';\nimport ButtonSorter from './Button-sorter';\nimport ButtonFilterMobile from './Button-filter-mobile';\n\n\nconst propTypes = {\n  gender: PropTypes.string,\n  selectedCategory: PropTypes.array,\n  backgroundColor: PropTypes.string,\n  textColor: PropTypes.string,\n  marginTop: PropTypes.number,\n  showSortBtn: PropTypes.bool,\n  showFilterBtn: PropTypes.bool,\n  dispatchToSortList: PropTypes.func,\n  sortArgsForFilter: PropTypes.string,\n  dispatchSize: PropTypes.func,\n  sortSizeForFilter: PropTypes.string,\n  keywordsSelectAction: PropTypes.func,\n  categoriesProducts: PropTypes.object,\n  keywordsForFilter: PropTypes.array,\n  actionPriceRangeFilter: PropTypes.func,\n  reducerPriceRangeFilter: PropTypes.number,\n  listLength: PropTypes.number,\n};\n\nconst Breadcrumbs = ({\n  gender, \n  selectedCategory, \n  backgroundColor, \n  textColor, \n  marginTop, \n  showSortBtn,\n  showFilterBtn, \n  dispatchToSortList, \n  sortArgsForFilter,\n  dispatchSize,\n  sortSizeForFilter,\n  keywordsSelectAction,\n  categoriesProducts,\n  keywordsForFilter,\n  actionPriceRangeFilter,\n  reducerPriceRangeFilter,\n  listLength\n}) => {\n\n  const styles= {\n    containerPcScreen: {\n      height: '80px',\n      backgroundColor: backgroundColor,\n      marginTop: marginTop,\n      color: textColor,\n      display: 'flex',\n      justifyContent: 'left',\n      alignItems: 'center'\n    },\n    containerMobileScreen: {\n      height: '100px',\n      backgroundColor: backgroundColor,\n      marginTop: marginTop,\n      color: textColor,\n      display: 'flex',\n      justifyContent: 'left',\n      alignItems: 'center'\n    },\n    sortBtnMobileScreen: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    linkColor: {\n      color: textColor\n    }\n  }\n \n  const sortBtn = \n    showSortBtn && \n      <Col sm={{ size: 'auto', offset: 6 }} style={styles.sortBtnMobileScreen}>\n        {showFilterBtn &&\n          <ButtonFilterMobile \n            buttonLabel='Filter the list'\n            gender={gender}\n            dispatchSize={dispatchSize}\n            sortSizeForFilter={sortSizeForFilter}\n            keywordsSelectAction={keywordsSelectAction}\n            keywordsForFilter={keywordsForFilter}\n            categoriesProducts={categoriesProducts}\n            actionPriceRangeFilter={actionPriceRangeFilter}\n            reducerPriceRangeFilter={reducerPriceRangeFilter}\n            listLength={listLength}\n          /> \n        }  \n        <ButtonSorter \n          dispatchToSortList={dispatchToSortList} \n          sortArgsForFilter={sortArgsForFilter} \n        />\n      </Col>\n\n  const genderLink = gender && <Fragment><Link style={styles.linkColor} to={`/category/${gender}`}>{` ${gender && gender.charAt(0).toUpperCase() + gender.substr(1)}'s Apparels`}</Link> ></Fragment>; \n  const selectedItem = selectedCategory.length === 1 ? ' '+selectedCategory : selectedCategory.length > 1 ? ' Multiple criterias' : ' Category selection'      \n  return (\n    <div style={isMobile ? styles.containerMobileScreen : styles.containerPcScreen}>\n      <Container>\n        <Row>\n          <Col sm={{ size: 'auto'}}>\n            <div>\n              <Link style={styles.linkColor} to=\"/\">Home </Link> >\n              {genderLink}\n              <span>{selectedItem}</span>\n            </div>\n          </Col>\n            { sortBtn }\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nBreadcrumbs.propTypes = propTypes;\n\nexport default Breadcrumbs;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react'\nimport '../style/checkbox.min.css'\n\nconst propTypes = {\n  gender: PropTypes.string.isRequired,\n  keywordsSelectAction: PropTypes.func.isRequired,\n  categoriesProducts: PropTypes.object.isRequired,\n  keywordsForFilter: PropTypes.array.isRequired\n};\n\nclass ItemsListFilterKeywords extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      cat: this.props.categoriesProductslength === 0\n    }\n  };\n\n  componentDidMount = () => {\n    const { keywordsForFilter, actionFillFilters, categoriesProducts, gender } = this.props\n    keywordsForFilter.length === 0 ? \n      gender === 'men' ? (() => {actionFillFilters(categoriesProducts.men)})() : (() => {actionFillFilters(categoriesProducts.women)})() \n      : console.log('gender err')\n  };\n\n  render(){\n    \n    const {   \n      categoriesProducts,\n      keywordsSelectAction, \n      keywordsForFilter,\n      gender \n    } = this.props;\n\n    const cat = () =>  gender === 'men' ? categoriesProducts.men : categoriesProducts.women;\n    \n    const stateIncludesCategory = category => keywordsForFilter.includes(category);\n\n    return (\n      cat().map(x=>\n        <li style={{listStyleType: 'none'}} key={x}>\n        <div className=\"pretty p-default p-smooth\">\n          {/* Empty onChange to avoid unrelevant msg error */}\n          <input type=\"checkbox\" onClick={()=>keywordsSelectAction(x)} checked={stateIncludesCategory(x)} onChange={()=>{}}/>\n          <div className=\"state p-success-o\">\n              <label>{x}</label>\n          </div>\n        </div>\n      </li>\n      )\n    );\n\n  };\n}; \n\nItemsListFilterKeywords.propTypes = propTypes;\n\nexport default ItemsListFilterKeywords;\n\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from 'reactstrap';\n\nconst propTypes = {\n  dispatchSize: PropTypes.func.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired\n};\n\nconst availableSizes = ['All', 'XL', 'L', 'M', 'S', 'XS'];\n\nconst ItemsListFilterSize = ({dispatchSize, sortSizeForFilter}) => availableSizes.map(x=><Button outline={sortSizeForFilter !== x} color=\"secondary\" onClick={()=> dispatchSize(x)} key={x}>{x}</Button>);\n\nItemsListFilterSize.propTypes = propTypes;\n\nexport default ItemsListFilterSize;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Slider from 'react-rangeslider';\nimport '../style/rangeslider.min.css';\n \nconst propTypes = {\n  actionPriceRangeFilter: PropTypes.func.isRequired,\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n};\n\nconst styles = {\n  display: 'flex',\n  justifyContent: 'space-around'\n};\n\nconst ProductListFilterPriceBar = ({\n  actionPriceRangeFilter, \n  reducerPriceRangeFilter\n}) => (\n    <div>\n      <Slider\n        max={200}\n        step={1}\n        value={reducerPriceRangeFilter}\n        onChange={actionPriceRangeFilter}\n      />\n      <div style={styles}>\n        <span>\n          min \n        </span>\n        <span>\n          max\n        </span>\n      </div>\n    </div>\n  );\n\nProductListFilterPriceBar.propTypes = propTypes;\n\nexport default ProductListFilterPriceBar;"],"sourceRoot":""}