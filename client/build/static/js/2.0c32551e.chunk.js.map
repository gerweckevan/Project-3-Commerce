{"version":3,"sources":["components/Item-list-filter-keywords.js","components/Items-list-filter-size.js","components/Item-list-filter-priceBar.js","components/Button-sorter.js","components/Button-filter-mobile.js","components/Breadcrumbs.js"],"names":["ItemsListFilterKeywords","props","componentDidMount","keywordsForFilter","actionFillFilters","categoriesProducts","gender","length","men","women","console","log","state","cat","categoriesProductslength","this","keywordsSelectAction","map","x","style","listStyleType","key","className","type","onClick","checked","category","includes","onChange","Component","availableSizes","ItemsListFilterSize","dispatchSize","sortSizeForFilter","outline","color","styles","display","justifyContent","ProductListFilterPriceBar","actionPriceRangeFilter","reducerPriceRangeFilter","max","step","value","ButtonSorter","dropdownShowNumberItemsOpen","dropdownSortOpen","dispatchToSortList","sortArgsForFilter","dropDownWithArrow","indexOf","src","alt","isOpen","toggle","setState","caret","ButtonFilterMobile","modal","listLength","marginRight","Breadcrumbs","selectedCategory","backgroundColor","textColor","marginTop","showSortBtn","showFilterBtn","containerPcScreen","height","alignItems","containerMobileScreen","sortBtnMobileScreen","linkColor","sortBtn","sm","size","offset","buttonLabel","genderLink","Link","to","charAt","toUpperCase","substr","selectedItem","isMobile"],"mappings":"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","file":"static/js/2.0c32551e.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react'\nimport '../style/checkbox.min.css'\n\nconst propTypes = {\n  gender: PropTypes.string.isRequired,\n  keywordsSelectAction: PropTypes.func.isRequired,\n  categoriesProducts: PropTypes.object.isRequired,\n  keywordsForFilter: PropTypes.array.isRequired\n};\n\nclass ItemsListFilterKeywords extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      cat: this.props.categoriesProductslength === 0\n    }\n  };\n\n  componentDidMount = () => {\n    const { keywordsForFilter, actionFillFilters, categoriesProducts, gender } = this.props\n    keywordsForFilter.length === 0 ? \n      gender === 'men' ? (() => {actionFillFilters(categoriesProducts.men)})() : (() => {actionFillFilters(categoriesProducts.women)})() \n      : console.log('gender err')\n  };\n\n  render(){\n    \n    const {   \n      categoriesProducts,\n      keywordsSelectAction, \n      keywordsForFilter,\n      gender \n    } = this.props;\n\n    const cat = () =>  gender === 'men' ? categoriesProducts.men : categoriesProducts.women;\n    \n    const stateIncludesCategory = category => keywordsForFilter.includes(category);\n\n    return (\n      cat().map(x=>\n        <li style={{listStyleType: 'none'}} key={x}>\n        <div className=\"pretty p-default p-smooth\">\n          {/* Empty onChange to avoid unrelevant msg error */}\n          <input type=\"checkbox\" onClick={()=>keywordsSelectAction(x)} checked={stateIncludesCategory(x)} onChange={()=>{}}/>\n          <div className=\"state p-success-o\">\n              <label>{x}</label>\n          </div>\n        </div>\n      </li>\n      )\n    );\n\n  };\n}; \n\nItemsListFilterKeywords.propTypes = propTypes;\n\nexport default ItemsListFilterKeywords;\n\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from 'reactstrap';\n\nconst propTypes = {\n  dispatchSize: PropTypes.func.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired\n};\n\nconst availableSizes = ['All', 'XL', 'L', 'M', 'S', 'XS'];\n\nconst ItemsListFilterSize = ({dispatchSize, sortSizeForFilter}) => availableSizes.map(x=><Button outline={sortSizeForFilter !== x} color=\"secondary\" onClick={()=> dispatchSize(x)} key={x}>{x}</Button>);\n\nItemsListFilterSize.propTypes = propTypes;\n\nexport default ItemsListFilterSize;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Slider from 'react-rangeslider';\nimport '../style/rangeslider.min.css';\n \nconst propTypes = {\n  actionPriceRangeFilter: PropTypes.func.isRequired,\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n};\n\nconst styles = {\n  display: 'flex',\n  justifyContent: 'space-around'\n};\n\nconst ProductListFilterPriceBar = ({\n  actionPriceRangeFilter, \n  reducerPriceRangeFilter\n}) => (\n    <div>\n      <Slider\n        max={200}\n        step={1}\n        value={reducerPriceRangeFilter}\n        onChange={actionPriceRangeFilter}\n      />\n      <div style={styles}>\n        <span>\n          min \n        </span>\n        <span>\n          max\n        </span>\n      </div>\n    </div>\n  );\n\nProductListFilterPriceBar.propTypes = propTypes;\n\nexport default ProductListFilterPriceBar;","import PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react'\nimport { \n  ButtonDropdown, \n  DropdownToggle, \n  DropdownMenu, \n  DropdownItem\n} from 'reactstrap';\n\nconst propTypes = {\n  dispatchToSortList: PropTypes.func.isRequired,\n  sortArgsForFilter: PropTypes.string.isRequired,\n};\n\nclass ButtonSorter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dropdownShowNumberItemsOpen: false,\n      dropdownSortOpen: false\n    };\n  }\n\n  render() {\n    const { dispatchToSortList, sortArgsForFilter } = this.props\n    const { dropdownSortOpen } = this.state\n\n    const dropDownWithArrow = (x) => \n    x.indexOf(\"Asc\") > 0 ? \n    <Fragment><img src= \"/down-arrow.png\" alt=\"\" />{' '+x}</Fragment> :\n    <Fragment><img src= \"/up-arrow.png\" alt=\"\" />{' '+x}</Fragment>\n  \n\n    const eachDropDown = (optionsArray) => optionsArray.map(x=>( \n      <DropdownItem onClick={()=>dispatchToSortList(x)} key={x}>\n        {dropDownWithArrow(x)}\n      </DropdownItem>\n    ))\n\n    return (\n      <ButtonDropdown  isOpen={dropdownSortOpen} toggle={()=>this.setState({dropdownSortOpen: !dropdownSortOpen})}>\n        <DropdownToggle caret color=\"light\" >\n          Sort: {dropDownWithArrow(sortArgsForFilter)}\n        </DropdownToggle>\n        <DropdownMenu>\n          {eachDropDown(['titleAsc', 'titleDesc', 'priceAsc', 'priceDesc'])}\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  };\n};\n\nButtonSorter.propTypes = propTypes;\n\nexport default ButtonSorter;","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport ItemsListFilterKeywords from './Item-list-filter-keywords'\nimport ItemsListFilterSize from './Items-list-filter-size'\nimport ItemListFilterPriceBar from './Item-list-filter-priceBar'\n\nconst propTypes = {\n  dispatchSize: PropTypes.func.isRequired,\n  gender: PropTypes.string.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired,\n  keywordsSelectAction: PropTypes.func.isRequired,\n  categoriesProducts: PropTypes.object.isRequired,\n  keywordsForFilter: PropTypes.array.isRequired,\n  actionPriceRangeFilter: PropTypes.func.isRequired,\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n  listLength: PropTypes.number.isRequired\n};\n\nclass ButtonFilterMobile extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: false\n    };\n  };\n\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  };\n\n  render() {\n\n    const { \n      dispatchSize,\n      gender,\n      sortSizeForFilter, \n      keywordsSelectAction, \n      categoriesProducts,\n      keywordsForFilter,\n      actionPriceRangeFilter,\n      reducerPriceRangeFilter,\n      listLength\n    } = this.props;\n\n\n    return (\n      <div>\n        <Button color=\"danger\" style={{marginRight:'20px'}} onClick={this.toggle}>Filter the list</Button>\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className}>\n          <ModalHeader toggle={this.toggle}>Results: <b>{listLength}</b></ModalHeader>\n          <ModalBody>\n            <h4>Categories</h4>\n              <ItemsListFilterKeywords \n                gender={gender} \n                keywordsForFilter={keywordsForFilter}\n                keywordsSelectAction={keywordsSelectAction}\n                categoriesProducts={categoriesProducts}\n              />\n            <h4>Size</h4>\n              <ItemsListFilterSize \n                dispatchSize={dispatchSize} \n                sortSizeForFilter={sortSizeForFilter}\n              />\n            <h4>Price {`< ${reducerPriceRangeFilter}$`}</h4>    \n              <ItemListFilterPriceBar \n                actionPriceRangeFilter={actionPriceRangeFilter}\n                reducerPriceRangeFilter={reducerPriceRangeFilter}\n              />\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nButtonFilterMobile.propTypes = propTypes;\n\nexport default ButtonFilterMobile;","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { isMobile } from \"react-device-detect\"; \nimport { Link } from 'react-router-dom';\nimport ButtonSorter from './Button-sorter';\nimport ButtonFilterMobile from './Button-filter-mobile';\n\n\nconst propTypes = {\n  gender: PropTypes.string,\n  selectedCategory: PropTypes.array,\n  backgroundColor: PropTypes.string,\n  textColor: PropTypes.string,\n  marginTop: PropTypes.number,\n  showSortBtn: PropTypes.bool,\n  showFilterBtn: PropTypes.bool,\n  dispatchToSortList: PropTypes.func,\n  sortArgsForFilter: PropTypes.string,\n  dispatchSize: PropTypes.func,\n  sortSizeForFilter: PropTypes.string,\n  keywordsSelectAction: PropTypes.func,\n  categoriesProducts: PropTypes.object,\n  keywordsForFilter: PropTypes.array,\n  actionPriceRangeFilter: PropTypes.func,\n  reducerPriceRangeFilter: PropTypes.number,\n  listLength: PropTypes.number,\n};\n\nconst Breadcrumbs = ({\n  gender, \n  selectedCategory, \n  backgroundColor, \n  textColor, \n  marginTop, \n  showSortBtn,\n  showFilterBtn, \n  dispatchToSortList, \n  sortArgsForFilter,\n  dispatchSize,\n  sortSizeForFilter,\n  keywordsSelectAction,\n  categoriesProducts,\n  keywordsForFilter,\n  actionPriceRangeFilter,\n  reducerPriceRangeFilter,\n  listLength\n}) => {\n\n  const styles= {\n    containerPcScreen: {\n      height: '80px',\n      backgroundColor: backgroundColor,\n      marginTop: marginTop,\n      color: textColor,\n      display: 'flex',\n      justifyContent: 'left',\n      alignItems: 'center'\n    },\n    containerMobileScreen: {\n      height: '100px',\n      backgroundColor: backgroundColor,\n      marginTop: marginTop,\n      color: textColor,\n      display: 'flex',\n      justifyContent: 'left',\n      alignItems: 'center'\n    },\n    sortBtnMobileScreen: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    linkColor: {\n      color: textColor\n    }\n  }\n \n  const sortBtn = \n    showSortBtn && \n      <Col sm={{ size: 'auto', offset: 6 }} style={styles.sortBtnMobileScreen}>\n        {showFilterBtn &&\n          <ButtonFilterMobile \n            buttonLabel='Filter the list'\n            gender={gender}\n            dispatchSize={dispatchSize}\n            sortSizeForFilter={sortSizeForFilter}\n            keywordsSelectAction={keywordsSelectAction}\n            keywordsForFilter={keywordsForFilter}\n            categoriesProducts={categoriesProducts}\n            actionPriceRangeFilter={actionPriceRangeFilter}\n            reducerPriceRangeFilter={reducerPriceRangeFilter}\n            listLength={listLength}\n          /> \n        }  \n        <ButtonSorter \n          dispatchToSortList={dispatchToSortList} \n          sortArgsForFilter={sortArgsForFilter} \n        />\n      </Col>\n\n  const genderLink = gender && <Fragment><Link style={styles.linkColor} to={`/category/${gender}`}>{` ${gender && gender.charAt(0).toUpperCase() + gender.substr(1)}'s Apparels`}</Link> ></Fragment>; \n  const selectedItem = selectedCategory.length === 1 ? ' '+selectedCategory : selectedCategory.length > 1 ? ' Multiple criterias' : ' Category selection'      \n  return (\n    <div style={isMobile ? styles.containerMobileScreen : styles.containerPcScreen}>\n      <Container>\n        <Row>\n          <Col sm={{ size: 'auto'}}>\n            <div>\n              <Link style={styles.linkColor} to=\"/\">Home </Link> >\n              {genderLink}\n              <span>{selectedItem}</span>\n            </div>\n          </Col>\n            { sortBtn }\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nBreadcrumbs.propTypes = propTypes;\n\nexport default Breadcrumbs;\n"],"sourceRoot":""}