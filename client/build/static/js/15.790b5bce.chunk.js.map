{"version":3,"sources":["containers/Admin-container.js"],"names":["AdminContainer","props","onChangeEmail","e","setState","email","target","value","onChangePassword","password","onLogin","a","req","axios","post","state","response","localStorage","setItem","data","token","apiResponse","console","log","statusText","onSignup","then","catch","error","redirectLoginSuccessListener","to","pathname","referrer","errors","this","className","style","paddingTop","paddingBottom","type","name","id","placeholder","onChange","for","onClick","Component"],"mappings":"gOAKMA,E,kDAEJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAQRC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAACC,MAAOF,EAAEG,OAAOC,SAVf,EAalBC,iBAAmB,SAACL,GAClB,EAAKC,SAAS,CAACK,SAAUN,EAAEG,OAAOC,SAdlB,EAiBlBG,QAjBkB,sBAiBR,8BAAAC,EAAA,sEAEAC,EAAMC,IAAMC,KAAK,cAAe,CACpCT,MAAO,EAAKU,MAAMV,MAClBI,SAAU,EAAKM,MAAMN,WAJjB,SAMiBG,EANjB,OAMAI,EANA,OAONC,aAAaC,QAAQ,QAASF,EAASG,KAAKC,OAC5C,EAAKhB,SAAS,CAACiB,YAAa,YAC5BC,QAAQC,IAAIP,GATN,kDAWN,EAAKZ,SAAS,CAAEiB,YAAa,KAAML,SAASQ,aAC5CF,QAAQC,IAAI,KAAMP,UAZZ,0DAjBQ,EAkClBS,SAAW,WACTZ,IAAMC,KAAK,cAAe,CACxBT,MAAO,EAAKU,MAAMV,MAClBI,SAAU,EAAKM,MAAMN,WAEtBiB,MAAK,SAAUV,GACdM,QAAQC,IAAIP,MAEbW,OAAM,SAAUC,GACfN,QAAQC,IAAIK,EAAMZ,SAASG,KAAKS,WA3ClB,EA+ClBC,6BAA+B,WAC7B,GAA+B,YAA3B,EAAKd,MAAMM,YACb,OAAO,kBAAC,IAAD,CAAUS,GAAI,CACnBC,SAAU,aACVhB,MAAO,CAAEiB,SAAU,YAjDvB,EAAKjB,MAAQ,CACXV,MAAO,QACPI,SAAU,QACVY,YAAa,IALC,E,0CA0DlB,WACE,IAAMY,EACuB,gBAA3BC,KAAKnB,MAAMM,YACT,4CAC2B,iBAA3Ba,KAAKnB,MAAMM,aACX,8BAEJ,OACE,6BACGa,KAAKL,+BACN,kBAAC,IAAD,CAAWM,UAAU,MAAMC,MAAO,CAACC,WAAY,QAASC,cAAe,UACvE,+CACA,kBAAC,IAAD,CAAMH,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,IAAD,CACEI,KAAK,QACLC,KAAK,QACLC,GAAG,eACHC,YAAY,QACZnC,MAAO2B,KAAKnB,MAAMV,MAAOsC,SAAUT,KAAKhC,kBAI9C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0C,IAAI,mBAAX,YACA,kBAAC,IAAD,CACEL,KAAK,WACLC,KAAK,WACLC,GAAG,kBACHC,YAAY,WACZnC,MAAO2B,KAAKnB,MAAMN,SAAUkC,SAAUT,KAAK1B,qBAIjD,kBAAC,IAAD,CAAQqC,QAASX,KAAKxB,SAAtB,SACA,kBAAC,IAAD,CAAMoB,GAAG,cAAT,eACA,2BAAIG,U,GAnGea,aA4Gd9C","file":"static/js/15.790b5bce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Container, Col } from 'reactstrap';\n\nclass AdminContainer extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      email: 'admin',\n      password: 'admin',\n      apiResponse: ''\n    };\n  }\n\n  onChangeEmail = (e) => {\n    this.setState({email: e.target.value})\n  }\n\n  onChangePassword = (e) => {\n    this.setState({password: e.target.value})\n  }\n\n  onLogin = async() => {\n    try {\n      const req = axios.post('/api/signin', {\n        email: this.state.email,\n        password: this.state.password\n      })\n      const response = await req;\n      localStorage.setItem(\"token\", response.data.token);\n      this.setState({apiResponse: 'success'})\n      console.log(response)\n    } catch (error) {\n      this.setState({ apiResponse: error.response.statusText})\n      console.log(error.response);\n    }\n\n  }\n\n  onSignup = () => {\n    axios.post('/api/signup', {\n      email: this.state.email,\n      password: this.state.password\n    })\n    .then(function (response) {\n      console.log(response);\n    })\n    .catch(function (error) {\n      console.log(error.response.data.error);\n    });\n  }\n\n  redirectLoginSuccessListener = () => {\n    if (this.state.apiResponse === 'success') {\n      return <Redirect to={{\n        pathname: \"/dashboard\",\n        state: { referrer: 'test' }\n      }}\n    />\n    \n    }\n  }\n\n  render() {\n    const errors = \n      this.state.apiResponse === 'Bad Request' ?\n        'Please fill the email and password fields' :\n        this.state.apiResponse === 'Unauthorized' &&\n        'Email or password incorrect'\n\n    return (\n      <div>\n        {this.redirectLoginSuccessListener()}\n        <Container className=\"App\" style={{paddingTop: '150px', paddingBottom: '200px'}}>\n        <h2>Admin Dashboard</h2>\n        <Form className=\"form\">\n          <Col>\n            <FormGroup>\n              <Label>Admin</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"exampleEmail\"\n                placeholder=\"Admin\"\n                value={this.state.email} onChange={this.onChangeEmail} \n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"examplePassword\"\n                placeholder=\"********\"\n                value={this.state.password} onChange={this.onChangePassword} \n              />\n            </FormGroup>\n          </Col>\n          <Button onClick={this.onLogin}>Login</Button>\n          <Link to=\"/dashboard\">secret page</Link>\n          <p>{errors}</p>\n        </Form>\n      </Container>\n      </div>\n    )\n\n  }\n}\n\nexport default AdminContainer;"],"sourceRoot":""}