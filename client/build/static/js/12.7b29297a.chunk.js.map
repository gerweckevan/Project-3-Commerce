{"version":3,"sources":["selectors/selector_list_products_filter_sorter.js","components/Items-list-htags-labels.js","components/Items-list-banner.js","components/Items-list-sidebar.js","components/Paginator.js","components/Each-item-in-list.js","components/Loading-gif.js","components/Items-list.js","containers/Items-list-container.js","components/Button-link-gender-page.js"],"names":["selectorListFilterSorter","createSelector","state","listFetchDataSuccess","keywordsForFilter","sortArgsForFilter","sortSizeForFilter","reducerPriceRangeFilter","FilteredListByKeywords","filter","x","some","el","tags","includes","y","size","price","sort","a","b","title","ItemsListHtagsLabel","priceLabel","length","style","padding","margin","color","sizeLabel","sortLabel","categoriesLabel","map","key","fontSize","styles","backgroundImage","backgroundSize","textShadow","ItemsListBanner","gender","bannerCoverMenPc","bannerCoverMenMobile","bannerCoverWomenMobile","bannerCoverWomenPc","textBanner","titleH1Pc","backgroundJumbotron","isMobile","className","subTitles","marginTop","ItemsListSidebar","dispatchSize","keywordsSelectAction","categoriesProducts","actionPriceRangeFilter","oneKeywordForFilter","actionFillFilters","Paginator","currentPage","maxPages","onPageChange","aria-label","previous","onClick","previousBtn","Array","i","active","next","nextBtn","spaceColumn","marginLeft","marginRight","marginBottom","border","marginLeftBtn","containerPaddingTop","paddingTop","EachItemInList","FilteredSortedList","itemsMaxPage","slice","md","_id","Link","to","split","join","top","width","src","images","alt","position","textAlign","height","backgroundColor","boxShadow","rating","starDimension","starSpacing","starRatedColor","numberOfStars","name","LoadingGif","ItemsList","match","listIsLoading","currentPageHandler","dispatchToSortList","params","listLength","loading_logic","pagination","Math","ceil","itemsListByGender_logic","order","display","alignItems","sideBar","isBrowser","xs","Breadcrumbs","selectedCategory","textColor","showSortBtn","showFilterBtn","ProductsListContainer","props","componentDidMount","fetchDataApi","setState","Number","isInteger","render","Component","connect","dispatch","url","actionSizeForFilter","ButtonLinkGenderPage","content","buttonStylePc","buttonStyleMobile"],"mappings":"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","file":"static/js/12.7b29297a.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nconst listToFilter = state => state.listFetchDataSuccess\nconst argsForFilter = state => state.keywordsForFilter\nconst sortForFilter = state => state.sortArgsForFilter\nconst getSize = state => state.sortSizeForFilter\nconst getPriceRange = state => state.reducerPriceRangeFilter\n\nconst getFilteredList = (listFetchDataSuccess, keywordsForFilter, sortArgsForFilter, sortSizeForFilter, reducerPriceRangeFilter) => {\n  \n  const FilteredListByKeywords = listFetchDataSuccess.filter(x=>\n    keywordsForFilter.some(el => x.tags.includes(el))\n  )\n\n  const FilteredListBySize = sortSizeForFilter === 'All' ? FilteredListByKeywords :\n  FilteredListByKeywords.filter(y=>\n    y.size.includes(sortSizeForFilter)\n  )\n\n  const FilteredListByPriceRange = FilteredListBySize.filter(x => x.price <= reducerPriceRangeFilter)\n\n  return FilteredListByPriceRange.sort((a, b) => {\n    switch(sortArgsForFilter) {\n      case 'titleAsc': \n        if (a.title > b.title) return 1;\n        if (a.title < b.title) return -1;\n\n      case 'titleDesc':\n        if (a.title < b.title) return 1;\n        if (a.title > b.title) return -1;\n\n      case 'priceAsc':\n        if (a.price > b.price) return 1;\n        if (a.price < b.price) return -1;\n\n      case 'priceDesc':\n        if (a.price < b.price) return 1;\n        if (a.price > b.price) return -1;\n\n      default:\n        if (a.title > b.title) return 1;\n        if (a.title < b.title) return -1;\n    }\n  })\n}\n\n\nexport const selectorListFilterSorter = createSelector(\n  listToFilter,\n  argsForFilter,\n  sortForFilter,\n  getSize,\n  getPriceRange,\n  getFilteredList\n)\n\n\n\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Badge } from 'reactstrap';\n\nconst propTypes = {\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n  sortArgsForFilter: PropTypes.string.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired,\n  keywordsForFilter: PropTypes.array.isRequired,\n};\n\nconst ItemsListHtagsLabel = ({\n  reducerPriceRangeFilter,\n  sortSizeForFilter,\n  keywordsForFilter,\n  sortArgsForFilter\n}) => {\n\n  const priceLabel = keywordsForFilter.length> 0 && <Badge style={{padding: '10px', margin:'10px'}} color='success'>{`#Price<${reducerPriceRangeFilter} $`} </Badge>\n  const sizeLabel = keywordsForFilter.length> 0 && <Badge style={{padding: '10px', margin:'10px'}} color='info'>{`#Size${sortSizeForFilter === 'All' ? 's' : ''}: ${sortSizeForFilter}`} </Badge>\n  const sortLabel = keywordsForFilter.length> 0 && <Badge style={{padding: '10px', margin:'10px'}} color='danger'>{`#Sort: ${sortArgsForFilter}`} </Badge>\n  const categoriesLabel = keywordsForFilter.map(x=><Badge style={{padding: '10px', margin:'10px'}} color='light' key={x}>{`#${x}`} </Badge>)\n  return (\n    <div style={{fontSize:'20px'}}>\n      { sortLabel }\n      { priceLabel }\n      { sizeLabel }\n      { categoriesLabel }\n    </div>\n  )\n};\n\nItemsListHtagsLabel.propTypes = propTypes;\n\nexport default ItemsListHtagsLabel;\n","import PropTypes from 'prop-types';\nimport React from 'react'\nimport { \n  Jumbotron, \n  Container,\n} from 'reactstrap';\nimport {\n  isMobile\n} from \"react-device-detect\";\nimport ItemsListHtagsLabels from './Items-list-htags-labels'\n\nconst propTypes = {\n  gender: PropTypes.string,\n  reducerPriceRangeFilter: PropTypes.number,\n  sortArgsForFilter: PropTypes.string,\n  sortSizeForFilter: PropTypes.string,\n  keywordsForFilter: PropTypes.array,\n}\n\nconst styles={\n  bannerCoverMenPc: {\n    backgroundImage: 'url(\"/images/banner-men-pc.jpg\")',\n    backgroundSize: 'cover'\n  },\n  bannerCoverWomenPc: {\n    backgroundImage: 'url(\"/images/banner-women-pc.jpg\")',\n    backgroundSize: 'cover'\n  },\n  bannerCoverMenMobile: {\n    backgroundImage: 'url(\"/images/banner-men-mobile.jpg\")',\n    backgroundSize: 'cover'\n  },\n  bannerCoverWomenMobile: {\n    backgroundImage: 'url(\"/images/banner-women-mobile.jpg\")',\n    backgroundSize: 'cover'\n  },\n  textBanner: {\n    textShadow: \"3px 3px 3px grey\",\n    color:'white'\n  },\n  titleH1Pc: {\n    fontSize: '80px'\n  }\n}\n\nconst ItemsListBanner = ({\n  gender,\n  reducerPriceRangeFilter,\n  sortArgsForFilter,\n  sortSizeForFilter,\n  keywordsForFilter\n}) => {\n\n  const { bannerCoverMenPc, bannerCoverMenMobile, bannerCoverWomenMobile, bannerCoverWomenPc,  textBanner, titleH1Pc } = styles\n  const backgroundJumbotron = \n    isMobile && gender === 'men' ?  bannerCoverMenMobile :\n    isMobile && gender === 'women' ?  bannerCoverWomenMobile :\n    isMobile === false && gender === 'men' ? bannerCoverMenPc :\n    bannerCoverWomenPc\n\n  return (\n    <Jumbotron style={backgroundJumbotron}>\n      <Container style={textBanner}>\n        <h1 className=\"display-3\" style={titleH1Pc}>{gender === 'men' ? 'Men' : 'Women' }</h1>\n        <ItemsListHtagsLabels \n          reducerPriceRangeFilter={reducerPriceRangeFilter}\n          sortArgsForFilter={sortArgsForFilter}\n          sortSizeForFilter={sortSizeForFilter}\n          keywordsForFilter={keywordsForFilter}\n        />\n      </Container>\n    </Jumbotron>\n  )\n};\n\nItemsListBanner.propTypes = propTypes;\n\nexport default ItemsListBanner;","import PropTypes from 'prop-types';\nimport React from 'react'\nimport ItemsListFilterKeywords from './Item-list-filter-keywords'\nimport ItemsListFilterSize from './Items-list-filter-size'\nimport ProductListFilterPriceBar from './Item-list-filter-priceBar'\n\nconst propTypes = {\n  gender: PropTypes.string.isRequired, \n  dispatchSize: PropTypes.func.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired,\n  keywordsSelectAction: PropTypes.func.isRequired,\n  keywordsForFilter: PropTypes.array.isRequired, \n  categoriesProducts: PropTypes.object.isRequired,\n  actionPriceRangeFilter: PropTypes.func.isRequired,\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n  oneKeywordForFilter: PropTypes.func.isRequired,\n  actionFillFilters: PropTypes.func.isRequired\n};\n\nconst styles = {\n  subTitles:{\n    color: 'grey',\n    marginTop:'20px'\n  }\n}\n\nconst ItemsListSidebar = ({\n  gender, \n  dispatchSize, \n  sortSizeForFilter, \n  keywordsSelectAction, \n  keywordsForFilter, \n  categoriesProducts,\n  actionPriceRangeFilter,\n  reducerPriceRangeFilter,\n  oneKeywordForFilter,\n  actionFillFilters\n}) => (\n  <div>\n    <h4 style={styles.subTitles}>Categories</h4>\n      <ItemsListFilterKeywords \n        gender={gender} \n        keywordsForFilter={keywordsForFilter}\n        keywordsSelectAction={keywordsSelectAction}\n        categoriesProducts={categoriesProducts}\n        oneKeywordForFilter={oneKeywordForFilter}\n        actionFillFilters={actionFillFilters}\n      />\n    <h4 style={styles.subTitles}>Size</h4>\n      <ItemsListFilterSize \n        dispatchSize={dispatchSize} \n        sortSizeForFilter={sortSizeForFilter}\n      />\n    <h4 style={styles.subTitles}>Price {`< ${reducerPriceRangeFilter}$`}</h4>    \n      <ProductListFilterPriceBar \n        actionPriceRangeFilter={actionPriceRangeFilter}\n        reducerPriceRangeFilter={reducerPriceRangeFilter}\n      />\n  </div>\n)\n\nItemsListSidebar.propTypes = propTypes;\n\nexport default ItemsListSidebar;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  Pagination, \n  PaginationItem, \n  PaginationLink \n} from 'reactstrap';\n\nconst propTypes = {\n  currentPage: PropTypes.number,\n  maxPages: PropTypes.number,\n  onPageChange: PropTypes.func\n}\n\nconst previousBtn = (currentPage, onPageChange) => currentPage > 1 && <PaginationLink previous onClick={()=>onPageChange('previous')}/>\nconst nextBtn = (currentPage, maxPages, onPageChange) => currentPage < maxPages && <PaginationLink next onClick={()=>onPageChange('next')}/>\n\nconst Paginator = ({currentPage, maxPages, onPageChange}) => (\n\n  <Pagination aria-label=\"Page navigation example\">\n    <PaginationItem>\n      {previousBtn(currentPage, onPageChange)}\n    </PaginationItem>\n    {[...Array(maxPages)].map((x, i) =>(          \n      <PaginationItem key={i+1} active={currentPage === i+1}>\n        <PaginationLink onClick={()=>onPageChange(i)}>\n          {i+1}\n        </PaginationLink>\n      </PaginationItem>\n    )\n    )}\n    \n    <PaginationItem>\n      {nextBtn(currentPage, maxPages, onPageChange)}\n    </PaginationItem>\n  </Pagination>);\n\nPaginator.propTypes = propTypes;\n\nexport default Paginator;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport StarRatings from 'react-star-ratings';\nimport { \n  Col,\n  Card, \n  CardImg\n} from 'reactstrap';\n\nconst propTypes = {\n  FilteredSortedList: PropTypes.array.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  itemsMaxPage: PropTypes.number.isRequired\n};\n\nconst styles = {\n  spaceColumn: {\n    marginLeft: '25px',\n    marginRight: '25px',\n    marginBottom: '50px',\n    border: 'none'\n  },\n  fontSize: {\n    fontSize: '15px'\n  },\n  marginLeftBtn: {\n    marginLeft: '30px'\n  },\n  containerPaddingTop: {\n    paddingTop: '35px'\n  }\n};\n\nconst EachItemInList = ({\n  FilteredSortedList,\n  currentPage,\n  itemsMaxPage\n}) => {  \n  return (FilteredSortedList.slice((currentPage-1)*itemsMaxPage,itemsMaxPage*currentPage).map(x => \n    <Col md=\"4\" key={x._id}> \n      <Card style={styles.spaceColumn}>\n        <Link to={`/item/${x._id}/${x.title.split(' ').join('-')}`} className=\"text-white\">\n          <CardImg top width=\"100%\" src={x.images[0]} alt=\"Card image cap\" />\n        </Link>\n          <div>\n            <div style={{position: 'absolute', top: 0, textAlign: 'center', width: '100%'}}>{x.color.map(x=><div key={x} style={{width:'20px', height:'20px', backgroundColor:x, boxShadow: '0px 0px 14px -4px rgba(0,0,0,0.75)'}}/>)}</div>\n            <p style={{margin:'auto'}}>{x.title}</p>\n            <StarRatings\n              rating={x.rating}\n              starDimension=\"15px\"\n              starSpacing=\"1px\"\n              starRatedColor=\"#072a48\"\n              // changeRating={this.changeRating}  <-- uncomment to transform in input\n              numberOfStars={5}\n              name='rating'\n              />\n            <p className=\"text-muted\">{x.price} $</p>\n          </div>\n      </Card>\n    </Col>\n  ));\n};\n\nEachItemInList.propTypes = propTypes;\n\nexport default EachItemInList;\n\n\n\n","import React from 'react'\n\nconst LoadingGif = () => <div style={{margin:'auto'}}><img src='/images/gifLoading.gif' alt=\"\" /></div>\n\nexport default LoadingGif\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isBrowser, isMobile } from \"react-device-detect\";\nimport ItemsListBanner from './Items-list-banner';\nimport Breadcrumbs from './Breadcrumbs';\nimport ItemsListSidebar from './Items-list-sidebar';\nimport Paginator from './Paginator';\nimport EachItemInList from './Each-item-in-list'; \nimport LoadingGif from './Loading-gif';\nimport ButtonLinkGenderPage from './Button-link-gender-page'\nimport { \n  Container,\n  Row,\n  Col\n} from 'reactstrap';\n\nconst propTypes = {\n  listIsLoading: PropTypes.bool.isRequired, \n  FilteredSortedList: PropTypes.array.isRequired, \n  keywordsForFilter: PropTypes.array.isRequired, \n  oneKeywordForFilter: PropTypes.func.isRequired,\n  currentPageHandler: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  itemsMaxPage: PropTypes.number.isRequired,\n  dispatchSize: PropTypes.func.isRequired,\n  sortSizeForFilter: PropTypes.string.isRequired,\n  sortArgsForFilter: PropTypes.string.isRequired,\n  dispatchToSortList: PropTypes.func.isRequired,\n  keywordsSelectAction: PropTypes.func.isRequired,\n  categoriesProducts: PropTypes.object.isRequired,\n  actionPriceRangeFilter: PropTypes.func.isRequired,\n  reducerPriceRangeFilter: PropTypes.number.isRequired,\n  actionFillFilters: PropTypes.func.isRequired\n}\n\nconst styles = {\n  spaceColumn: {\n    marginLeft: '25px',\n    marginRight: '25px',\n    marginBottom: '50px'\n  },\n  fontSize: {\n    fontSize: '15px'\n  },\n  marginLeftBtn: {\n    marginLeft: '30px'\n  },\n  containerPaddingTop: {\n    paddingTop: '35px'\n  }\n};\n\nconst ItemsList = ({\n  match, \n  listIsLoading,\n  FilteredSortedList,\n  keywordsForFilter,\n  oneKeywordForFilter,\n  currentPageHandler,\n  currentPage,\n  itemsMaxPage,\n  dispatchSize,\n  sortSizeForFilter,\n  sortArgsForFilter,\n  dispatchToSortList,\n  keywordsSelectAction,\n  categoriesProducts,\n  actionPriceRangeFilter,\n  reducerPriceRangeFilter,\n  actionFillFilters\n}) => {\n\n  const { gender } = match.params;\n  const listLength = FilteredSortedList.length\n\n  const loading_logic = listIsLoading && <LoadingGif />;\n\n  const pagination = Math.ceil(listLength/itemsMaxPage)>1 ? \n    (<Paginator  \n      maxPages={Math.ceil(listLength/itemsMaxPage)} \n      currentPage={currentPage} \n      itemsMaxPage={itemsMaxPage} \n      onPageChange={currentPageHandler}\n    />) : \n    currentPage > 1 && (()=> currentPageHandler('empty'))()\n\n\n\n  const itemsListByGender_logic = \n    \n    <Col md={{ size: 9, order: 1 }}>\n      {listIsLoading === false && <i>Results: {listLength}</i>}\n      {FilteredSortedList.length === 0 && listIsLoading === false && \n      <div style={{ display: 'flex', alignItems: 'center'}}>\n        <h2><i>Select a category: </i> </h2>\n        <ButtonLinkGenderPage gender='men'/>\n        <ButtonLinkGenderPage gender='women'/>\n      </div>}\n\n      <Row>\n        {loading_logic} {/* if list is loading show loader */}\n        <EachItemInList \n          FilteredSortedList={FilteredSortedList} \n          currentPage={currentPage}\n          itemsMaxPage={itemsMaxPage}\n          currentPageHandler={currentPageHandler}\n          listIsLoading={listIsLoading}\n        />\n      </Row>\n      {pagination}\n    </Col>;\n\n    const sideBar =  isBrowser &&\n    <Col md=\"3\" xs='12'>\n      <Row>\n        <ItemsListSidebar \n          keywordsForFilter={keywordsForFilter} \n          dispatchSize={dispatchSize}\n          sortSizeForFilter={sortSizeForFilter}\n          keywordsSelectAction={keywordsSelectAction}\n          categoriesProducts={categoriesProducts}\n          actionPriceRangeFilter={actionPriceRangeFilter}\n          reducerPriceRangeFilter={reducerPriceRangeFilter}\n          oneKeywordForFilter={oneKeywordForFilter}\n          gender={gender}\n          actionFillFilters={actionFillFilters}\n        />\n      </Row>\n    </Col>;\n\n\n  return (\n    <div>\n      <ItemsListBanner \n        gender={gender} \n        reducerPriceRangeFilter={reducerPriceRangeFilter}\n        sortSizeForFilter={sortSizeForFilter}\n        keywordsForFilter={keywordsForFilter}\n        sortArgsForFilter={sortArgsForFilter}\n      />\n      <Breadcrumbs \n        selectedCategory={keywordsForFilter} \n        keywordsForFilter={keywordsForFilter}\n        sortArgsForFilter = {sortArgsForFilter}\n        dispatchToSortList = {dispatchToSortList}\n        gender={gender} \n        backgroundColor={'#072a48'}\n        textColor={'white'}\n        marginTop={-34}\n        showSortBtn={keywordsForFilter.length > 0}\n        showFilterBtn={isMobile}\n        dispatchSize={dispatchSize}\n        sortSizeForFilter={sortSizeForFilter}\n        keywordsSelectAction={keywordsSelectAction}\n        categoriesProducts={categoriesProducts}\n        actionPriceRangeFilter={actionPriceRangeFilter}\n        reducerPriceRangeFilter={reducerPriceRangeFilter}\n        listLength={listLength}\n      />\n      <Container style={styles.containerPaddingTop}>\n        <Row>\n          {itemsListByGender_logic} {/* show list depending on gender  */}\n          {sideBar}\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nItemsList.propTypes = propTypes;\n\nexport default ItemsList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { \n  sortArgsForFilter, \n  keywordsForFilter, \n  actionSizeForFilter,\n  oneKeywordForFilter, \n  fetchDataApi,\n  actionPriceRangeFilter,\n  actionFillFilters\n} from '../actions/DataFetchingActions';\nimport { selectorListFilterSorter } from '../selectors/selector_list_products_filter_sorter';\nimport ItemsList from '../components/Items-list';\n\nclass ProductsListContainer extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentPage: 1,\n      itemsMaxPage: 9\n    };\n  };\n\n  componentDidMount = () => this.props.fetchDataApi('/api/productsdata');\n\n\n  currentPageHandler = x => {\n    const { currentPage } = this.state;\n    x === 'next' ? this.setState({currentPage: currentPage + 1}) :\n    x === 'previous' ? this.setState({currentPage: currentPage - 1} ) : \n    x === 'empty' ? this.setState({currentPage: 1}) : \n    Number.isInteger(x) && this.setState({currentPage: x + 1}); \n  };\n  \n  render = () => <ItemsList \n      {...this.props} \n      {...this.state} \n      currentPageHandler={this.currentPageHandler} \n    />\n  \n}\n\nconst mapStateToProps = state => {\n  const { keywordsForFilter, sortSizeForFilter, categoriesProducts, listIsLoading, reducerPriceRangeFilter,sortArgsForFilter } = state;\n  return {\n    listIsLoading,\n    FilteredSortedList: selectorListFilterSorter(state),\n    reducerPriceRangeFilter,\n    keywordsForFilter,\n    sortSizeForFilter,\n    sortArgsForFilter,\n    categoriesProducts\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDataApi: url => dispatch(fetchDataApi(url)),\n  oneKeywordForFilter: x => dispatch(oneKeywordForFilter(x)),\n  actionFillFilters: x => dispatch(actionFillFilters(x)),\n  dispatchSize: x => dispatch(actionSizeForFilter(x)), \n  actionPriceRangeFilter: x => dispatch(actionPriceRangeFilter(x)), \n  dispatchToSortList: x => dispatch(sortArgsForFilter(x)),\n  keywordsSelectAction: x => dispatch(keywordsForFilter(x))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductsListContainer);\n\n","import PropTypes from 'prop-types';\nimport React from 'react'\nimport {\n  isMobile\n} from \"react-device-detect\";\nimport { Button } from 'reactstrap';\nimport { Link } from 'react-router-dom' \n\nconst propTypes = {\n  gender: PropTypes.string.isRequired\n};\n\nconst styles = {\n  centerButtons: {\n    textAlign: 'center',\n    padding: '30px'\n  },\n  buttonStylePc: {\n    margin:'20px',\n    padding: '15px'\n  },\n  buttonStyleMobile: {\n    margin:'5px',\n    padding: '15px'\n  }\n}\n\nconst ButtonLinkGenderPage = ({gender, content=gender}) => {\n\n  const {buttonStylePc, buttonStyleMobile } = styles\n  \n  return <Link to={`/category/${gender}`} className=\"text-white\"><Button size={isMobile ? 'md' : 'lg'} color=\"light\" style={isMobile ? buttonStyleMobile : buttonStylePc}>{content}</Button></Link>\n}\n\nButtonLinkGenderPage.propTypes = propTypes;\n\nexport default ButtonLinkGenderPage"],"sourceRoot":""}